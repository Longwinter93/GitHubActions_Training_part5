name: Using a 7.ReusableWorkflows workflow
on:
  push:
    branches:
      - main
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Lint code
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Test code
        id: run-tests
        run: npm run test
      - name: Upload test report
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build website
        id: build-website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: dist
  deploy:
#Actions are used in steps. Currently, we intend to use an entire workflow which is combinations of steps or jobs
#We use predefined workflow from our git and we need to reference it instead of an action
#We define a path (a relative path in the same repo) where we create a workflow that will be use
#We can also use a path to a workflow defined in another repository
#If this job runs, we use this workflow -> 7.ReusableWorkflows
    needs: build
    uses: ./.github/workflows/7.ReusableWorkflows.yml
#under with we provide all the input values that must be provided
#I expect artifact-name (from 7.ReusableWorkflows.yml) + provide a value that we use dist-files
#We pass required input to this reusable workflow!
    with: 
      artifact-name: dist-files
#We can add secerts but we comment this out
    #secrets: 
      #some-secrets: ${{ secrets.some-secret }}   
  report:
    needs: [lint, deploy]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Output information
        run: | 
          echo "Something went wrong"
          echo "${{ toJSON(github) }}"

#In a deploy jobs in this workflow on GitHub Action
#We can see that it uses 7.ReusableWorkflows workflow in a deploy Job.