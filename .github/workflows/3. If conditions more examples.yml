name: If conditions with more examples
#In a MainContent.test.jsx we changed a 22 line from help-are to help-area to makes this workflow work
on:
  push:
    branches:
      - main
#To speed up this job, we cache the entire node_modules folder that is the local folder (created by running npm ci)
#It has all dependencies of this project in this folder
#We do not want to run a npm ci step if we restore that folder
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
#We do not want to cache this global .npm folder, but instead we cache a local folder called node_modules
#We remove ~/.npm from a path and change it to node_modules
#We intend to skip this Install dependencies step if we successfully use our cache - we use dependencies from a node_module folder
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
#To do that, we add a if condition to install this dependencies step - we reference to this step by id (Cache dependencies)
#Thanks to this id - cache, we can get data from this step with the help of this id
#According to docs, we use a cache action - cache-hit. It has an output. It has a boolean, but it is converted to string
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
#We check if it not equal to true. If it is not true - we are not able to use the cache,
#then I want to install dependencies manually again = run npm ci (install dependencies again)
#However, if we have a cache-hit because it is equal to true
#Thus, this step Install dependencies will be skipped with this condition, because we use dependencies from a node_modules folder
#which already exsits in repo
#We put this on each job to use this extra condition
        run: npm ci
      - name: Lint code
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Test code
        id: run-tests
        run: npm run test
      - name: Upload test report
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build website
        id: build-website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files
      - name: Output contents
        run: ls
      - name: Deploy
        run: echo "Deploying..."
#this job won't be executed because all jobs will be executed positively
  report:
    needs: [lint, deploy]
    if: failure()
    runs-on: ubuntu-latest
    steps:
        - name: Output information
          run: |
            echo 'Something went wrong'
            echo '${{ toJSON(github) }}'

#I run npm ci on the terminal to Install dependencies
#We can see we have a folder node_modules that contains all dependencies
#We use this folder node_modules that we cached all dependencies that are taken from this folder
#After second running, in a test job, a Install dependencies step was skipped 
#As we can see, it is possible to use if conditions to check that results were produced by anothe steps
#it depends on we either execute that step or not