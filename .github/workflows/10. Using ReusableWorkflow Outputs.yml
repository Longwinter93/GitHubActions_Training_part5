name: Using a 9.ReusableWorkflows workflow - Outputs
on:
  push:
    branches:
      - main
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Lint code
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Test code
        id: run-tests
        run: npm run test
      - name: Upload test report
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build website
        id: build-website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: dist
  deploy:
    needs: build
    uses: ./.github/workflows/9.ReusableWorkflowsOutputs.yml
    with: 
      artifact-name: dist-files
#We can add secerts but we comment this out
    #secrets: 
      #some-secrets: ${{ secrets.some-secret }}   
#In this workflow we use ReusableWorkflow (9.ReusableWorkflowsOutputs.yml) 
#We can get this output from this workflow and use it. To use it, we add this job
#We need this deploy job (it runs after it finishes) 
#We add step - we access needs context object -> to have access to a deploy job
#Then, we access the output of this job (this is job from reusable workflow ->9.ReusableWorkflowsOutputs.yml)
#Finally, I name this output result (9.ReusableWorkflowsOutputs.yml), thus we need to add result - to have access to it
  print-deploy-result:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Print deploy output
        run: echo '${{ needs.deploy.outputs.result }}'
  report:
    needs: [lint, deploy]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Output information
        run: | 
          echo "Something went wrong"
          echo "${{ toJSON(github) }}"

#On the Github Action on this workflow, we can see on a print-deploy-result job this output result -> success
#We use it from this 9.ReusableWorkflowsOutputs.yml file